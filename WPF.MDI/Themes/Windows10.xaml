<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:WPF.MDI"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <!--Aero2 - Default theme on Windows 8/10, the two are not identical have some differences, this is styled as Windows 10-->

    <sys:Double x:Key="WindowMinimized_Width">240</sys:Double>
    <sys:Double x:Key="WindowMinimized_Height">35</sys:Double>


    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" BorderThickness="0" Background="{TemplateBinding Background}">
                        <Grid>
                            <Image x:Name="Btn_CloseImage" SnapsToDevicePixels="True" HorizontalAlignment="Center" VerticalAlignment="Center" Height="10px" Width="10px"
                                   Margin="0,0,0,1" Source="/WPF.MDI;component/Themes/Windows10/Close.png" Stretch="UniformToFill" />
                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" >
                                    <Storyboard>
                                        <ColorAnimation To="White" BeginTime="00:00:00" Duration="00:00:00.24" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation To="#E81123" BeginTime="00:00:00" Duration="00:00:00.05" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation To="#FFF1707A" BeginTime="00:00:00" Duration="00:00:00.01" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Source" TargetName="Btn_CloseImage" Value="/WPF.MDI;component/Themes/Windows10/Close_Inverted.png"/>
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MdiChild}}, Path=(local:MdiChild.Focused)}" Value="False"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Source" TargetName="Btn_CloseImage" Value="/WPF.MDI;component/Themes/Windows10/Close_Gray.png"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MinimizedButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" BorderThickness="0" Background="{TemplateBinding Background}">
                        <Grid>
                            <Canvas x:Name="Canvas_Minimized" Margin="0,0,0,3" Height="10px" Width="10px" SnapsToDevicePixels="True" Background="Black">
                                <Canvas.OpacityMask>
                                    <ImageBrush ImageSource="/WPF.MDI;component/Themes/Windows10/Minimize.png" Stretch="UniformToFill"/>
                                </Canvas.OpacityMask>
                            </Canvas>
                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" >
                                    <Storyboard>
                                        <ColorAnimation To="White" BeginTime="00:00:00" Duration="00:00:00.22" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation To="#FFE5E5E5" BeginTime="00:00:00" Duration="00:00:00.05" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation To="#FFCACACB" BeginTime="00:00:00" Duration="00:00:00.01" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Canvas_Minimized" Value="Black"/>
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MdiChild}}, Path=(local:MdiChild.Focused)}" Value="False"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" TargetName="Canvas_Minimized" Value="#FF9b9c9c"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RestoredButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" BorderThickness="0" Background="{TemplateBinding Background}">
                        <Grid>
                            <Canvas x:Name="Canvas_Minimized" Margin="0,0,0,1" Height="10px" Width="10px" SnapsToDevicePixels="True" Background="Black">
                                <Canvas.OpacityMask>
                                    <ImageBrush ImageSource="/WPF.MDI;component/Themes/Windows10/Restore.png" Stretch="UniformToFill"/>
                                </Canvas.OpacityMask>
                            </Canvas>
                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" >
                                    <Storyboard>
                                        <ColorAnimation To="White" BeginTime="00:00:00" Duration="00:00:00.22" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation To="#FFE5E5E5" BeginTime="00:00:00" Duration="00:00:00.05" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation To="#FFCACACB" BeginTime="00:00:00" Duration="00:00:00.01" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Canvas_Minimized" Value="Black"/>
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MdiChild}}, Path=(local:MdiChild.Focused)}" Value="False"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" TargetName="Canvas_Minimized" Value="#FF9b9c9c"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaximizedButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" BorderThickness="0" Background="{TemplateBinding Background}">
                        <Grid>
                            <Canvas x:Name="Canvas_Maximized" Margin="0,0,0,1" Height="10px" Width="10px" SnapsToDevicePixels="True" Background="Black">
                                <Canvas.OpacityMask>
                                    <ImageBrush ImageSource="/WPF.MDI;component/Themes/Windows10/Maximize.png" Stretch="UniformToFill"/>
                                </Canvas.OpacityMask>
                            </Canvas>
                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" >
                                    <Storyboard>
                                        <ColorAnimation To="White" BeginTime="00:00:00" Duration="00:00:00.22" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation To="#FFE5E5E5" BeginTime="00:00:00" Duration="00:00:00.05" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation To="#FFCACACB" BeginTime="00:00:00" Duration="00:00:00.01" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Canvas_Maximized" Value="Black"/>
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MdiChild}}, Path=(local:MdiChild.Focused)}" Value="False"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" TargetName="Canvas_Maximized" Value="#FF9b9c9c"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ContentMaximizedBorderBrush" Color="#FFA0A0A0" />

    <BooleanToVisibilityConverter x:Key="BoolToVisibility" />

    <Style TargetType="{x:Type local:MdiChild}">
        <Setter Property="Width" Value="300" />
        <Setter Property="Height" Value="300" />
        <Setter Property="MinWidth" Value="150" />
        <Setter Property="MinHeight" Value="35" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MdiChild}">
                    <Grid>
                        <!--With .NET 4.5 is possible use: BorderBrush="{DynamicResource {x:Static SystemParameters.WindowGlassBrush}}" to get dymamic accent color-->
                        <Border Margin="0" Name="BaseBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderThickness="1" BorderBrush="Black">
                            <Border.Effect>
                                <DropShadowEffect x:Name="BaseBorderShadow" Opacity="0.4" BlurRadius="25" Direction="-45" RenderingBias="Performance" ShadowDepth="4"/>
                            </Border.Effect>
                            <Grid>
                                <Thumb Name="DragThumb" Height="30" VerticalAlignment="Top" Opacity="0" />

                                <Grid Name="HeaderContent" Height="24" Margin="6,0,142,0" VerticalAlignment="Top" IsHitTestVisible="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Image Name="IconImage" Width="16" Height="16" Margin="2,0,0,0" Stretch="Fill" RenderOptions.BitmapScalingMode="NearestNeighbor" Source="{TemplateBinding Icon}" Visibility="{TemplateBinding ShowIcon, Converter={StaticResource BoolToVisibility}}" />
                                    <TextBlock Name="Header" Grid.Column="1" Margin="4,3,0,0" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" Text="{TemplateBinding Title}" />
                                </Grid>

                                <Border Name="ContentBorder" Margin="0,26,0,0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentControl FocusVisualStyle="{x:Null}" Content="{TemplateBinding Content}" />
                                </Border>
                            </Grid>
                        </Border>

                        <Thumb Name="ResizeLeft" Width="6" HorizontalAlignment="Left" Margin="0,6,0,6" Opacity="0" Cursor="SizeWE" IsHitTestVisible="{TemplateBinding Resizable}" />
                        <Thumb Name="ResizeTop" Height="6" VerticalAlignment="Top" Margin="6,0,6,0" Opacity="0" Cursor="SizeNS" IsHitTestVisible="{TemplateBinding Resizable}" />
                        <Thumb Name="ResizeRight" Width="6" HorizontalAlignment="Right" Margin="0,6,0,6" Opacity="0" Cursor="SizeWE" IsHitTestVisible="{TemplateBinding Resizable}" />
                        <Thumb Name="ResizeBottom" Height="6" VerticalAlignment="Bottom" Margin="6,0,6,0" Opacity="0" Cursor="SizeNS" IsHitTestVisible="{TemplateBinding Resizable}" />
                        <Thumb Name="ResizeTopLeft" Width="6" Height="6" HorizontalAlignment="Left" VerticalAlignment="Top" Opacity="0" Cursor="SizeNWSE" IsHitTestVisible="{TemplateBinding Resizable}" />
                        <Thumb Name="ResizeTopRight" Width="6" Height="6" HorizontalAlignment="Right" VerticalAlignment="Top" Opacity="0" Cursor="SizeNESW" IsHitTestVisible="{TemplateBinding Resizable}" />
                        <Thumb Name="ResizeBottomRight" Width="6" Height="6" HorizontalAlignment="Right" VerticalAlignment="Bottom" Opacity="0" Cursor="SizeNWSE" IsHitTestVisible="{TemplateBinding Resizable}" />
                        <Thumb Name="ResizeBottomLeft" Width="6" Height="6" HorizontalAlignment="Left" VerticalAlignment="Bottom" Opacity="0" Cursor="SizeNESW" IsHitTestVisible="{TemplateBinding Resizable}" />

                        <StackPanel Name="ButtonsPanel" Orientation="Horizontal" Background="White" Margin="0,1,7,0" HorizontalAlignment="Right" VerticalAlignment="Top" >
                            <Button Name="MinimizeButton" UseLayoutRounding="True" Width="45" Height="25" Margin="4,0,1,0" Style="{DynamicResource MinimizedButtonStyle}"/>
                            <Button Name="MaximizeButton" UseLayoutRounding="True" Width="45" Height="25" Margin="0,0,1,0" Style="{DynamicResource MaximizedButtonStyle}"/>
                            <Button Name="CloseButton" UseLayoutRounding="True" Width="45" Height="25" Style="{DynamicResource CloseButtonStyle}" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Focused" Value="False">
                            <Setter TargetName="BaseBorder" Property="BorderBrush" Value="#919191" />
                            <Setter TargetName="BaseBorder" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Opacity="0.34" BlurRadius="14" Direction="-45" RenderingBias="Performance" ShadowDepth="2"/>
                                </Setter.Value>
                            </Setter>


                            <Setter TargetName="Header" Property="Foreground" Value="#FF9B9C9C" />
                            <Setter TargetName="CloseButton" Property="Tag" Value="0" />
                            <Setter TargetName="MaximizeButton" Property="Tag" Value="0" />
                            <Setter TargetName="MinimizeButton" Property="Tag" Value="0" />
                        </Trigger>
                        <Trigger SourceName="IconImage" Property="Source" Value="{x:Null}">
                            <Setter TargetName="IconImage" Property="Width" Value="0" />
                            <Setter TargetName="IconImage" Property="Margin" Value="0" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Minimized">
                            <Setter Property="MinWidth" Value="{StaticResource WindowMinimized_Width}" />
                            <Setter Property="MinHeight" Value="{StaticResource WindowMinimized_Height}" />
                            <Setter Property="Width" Value="{StaticResource WindowMinimized_Width}" />
                            <Setter Property="Height" Value="{StaticResource WindowMinimized_Height}" />
                            <Setter Property="Resizable" Value="False" />
                            <Setter TargetName="IconImage" Property="Margin" Value="2,0,0,0" />
                            <Setter TargetName="MinimizeButton" Property="Style" Value="{DynamicResource RestoredButtonStyle}" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="Resizable" Value="False" />
                            <Setter TargetName="BaseBorder" Property="BorderThickness" Value="0" />
                            <Setter TargetName="BaseBorder" Property="Margin" Value="0" />
                            <Setter TargetName="ContentBorder" Property="BorderThickness" Value="1" />
                            <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{StaticResource ContentMaximizedBorderBrush}" />
                            <Setter TargetName="ContentBorder" Property="Margin" Value="0" />
                            <Setter TargetName="HeaderContent" Property="Height" Value="20" />
                            <Setter TargetName="Header" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="IconImage" Property="Margin" Value="2,0,0,0" />
                            <Setter TargetName="MinimizeButton" Property="Margin" Value="20,1,1,1" />
                            <Setter TargetName="MaximizeButton" Property="Margin" Value="1" />
                            <Setter TargetName="CloseButton" Property="Margin" Value="1" />
                            <Setter TargetName="MinimizeButton" Property="Width" Value="35" />
                            <Setter TargetName="MaximizeButton" Property="Width" Value="35" />
                            <Setter TargetName="CloseButton" Property="Width" Value="35" />
                            <Setter TargetName="MinimizeButton" Property="Height" Value="18" />
                            <Setter TargetName="MaximizeButton" Property="Height" Value="18" />
                            <Setter TargetName="CloseButton" Property="Height" Value="18" />
                            <Setter TargetName="MaximizeButton" Property="Style" Value="{DynamicResource RestoredButtonStyle}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
